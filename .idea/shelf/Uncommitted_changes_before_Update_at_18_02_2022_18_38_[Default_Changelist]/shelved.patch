Index: app/src/main/java/com/example/studenthub/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.studenthub;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.studenthub.Fragment.HomeFragment;\r\nimport com.example.studenthub.Fragment.NotificationFragment;\r\nimport com.example.studenthub.Fragment.ProfileFragment;\r\nimport com.example.studenthub.Fragment.SearchFragment;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.navigation.NavigationBarView;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport java.util.Objects;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    FirebaseAuth mAuth = FirebaseAuth.getInstance();\r\n    FirebaseUser firebaseUser;\r\n    // Listener- listen when users logged in / out\r\n    FirebaseAuth.AuthStateListener mAuthListener;\r\n    StorageReference storageReference;\r\n    DrawerLayout drawerLayout;\r\n    BottomNavigationView bottom_navigation;\r\n    Fragment selectedFragment = null;\r\n\r\n    // When the app is visible to the user\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        // Add the listener\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n    }\r\n\r\n    // When the app is no more visible to the user\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n\r\n        // Remove the listener\r\n        mAuth.removeAuthStateListener(mAuthListener);\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        storageReference = FirebaseStorage.getInstance().getReference();\r\n        final View view = getLayoutInflater().inflate(R.layout.guest_dailog, null);\r\n        Button login = view.findViewById(R.id.dialog_login);\r\n        Button got_it = view.findViewById(R.id.dialog_got_it);\r\n\r\n        // Set toolbar and menu icon\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        ActionBar actionBar = getSupportActionBar();\r\n        Objects.requireNonNull(actionBar).setDisplayHomeAsUpEnabled(true);\r\n        actionBar.setHomeAsUpIndicator(R.drawable.ic_baseline_menu_24);\r\n\r\n        mAuthListener = firebaseAuth -> {\r\n            // getCurrentUser - function we can get the currently registered user as an\r\n            // instance of FirebaseUser class\r\n            firebaseUser = firebaseAuth.getCurrentUser();\r\n            //Log.d(\"Language111\", \"\"+firebaseUser.getEmail());\r\n        };\r\n        // Dialog Animation\r\n        Dialog dialog = new Dialog(MainActivity.this);\r\n        dialog.setContentView(R.layout.guest_dailog);\r\n\r\n        bottom_navigation = findViewById(R.id.bottom_navigation);\r\n        bottom_navigation.setOnItemSelectedListener(item -> {\r\n            switch (item.getItemId()){\r\n                case R.id.nav_home:\r\n                    selectedFragment = new HomeFragment();\r\n                    break;\r\n                case R.id.nav_search:\r\n                    if (firebaseUser.getEmail() == null) {\r\n                        dialog.show();\r\n                    }\r\n                    else {\r\n                        selectedFragment = new SearchFragment();\r\n                    }\r\n                    break;\r\n                case R.id.nav_post:\r\n                    if (firebaseUser.getEmail() == null) {\r\n                        dialog.show();\r\n                    }\r\n                    else {\r\n                        selectedFragment = null;\r\n                        startActivity(new Intent(MainActivity.this, PostActivity.class));\r\n                    }\r\n                    break;\r\n                case R.id.nav_notifications:\r\n                    if (firebaseUser.getEmail() == null) {\r\n                        dialog.show();\r\n                    }\r\n                    else {\r\n                        if (firebaseUser.getEmail() == null) {\r\n                            dialog.show();\r\n                        }\r\n                        else {\r\n                            selectedFragment = new NotificationFragment();\r\n                        }\r\n                    }\r\n                    break;\r\n                case R.id.nav_profile:\r\n\r\n                    // Check if user is logged in\r\n                   // Toast.makeText(MainActivity.this, \"\"+firebaseUser,Toast.LENGTH_LONG).show();\r\n                    if (firebaseUser.getEmail() == null) {\r\n                        dialog.show();\r\n                    }\r\n                    else {\r\n\r\n                        SharedPreferences.Editor editor = getSharedPreferences(\"PREFS\", MODE_PRIVATE).edit();\r\n                        editor.putString(\"profileid\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                        editor.apply();\r\n                        selectedFragment = new ProfileFragment();\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (selectedFragment != null) {\r\n                getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,\r\n                        selectedFragment).commit();\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        Bundle intent = getIntent().getExtras();\r\n        if (intent != null){\r\n            String publisher = intent.getString(\"publisherid\");\r\n\r\n            SharedPreferences.Editor editor = getSharedPreferences(\"PREFS\",MODE_PRIVATE).edit();\r\n            editor.putString(\"profileid\",publisher);\r\n            editor.apply();\r\n\r\n            getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,\r\n                    new ProfileFragment()).commit();\r\n        } else {\r\n            getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,\r\n                    new HomeFragment()).commit();\r\n        }\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/MainActivity.java b/app/src/main/java/com/example/studenthub/MainActivity.java
--- a/app/src/main/java/com/example/studenthub/MainActivity.java	(revision b272826f11666d78f13ded35bd7fe7fe3e4859b4)
+++ b/app/src/main/java/com/example/studenthub/MainActivity.java	(date 1645201312263)
@@ -1,6 +1,7 @@
 package com.example.studenthub;
 
 import android.app.Dialog;
+import android.app.ProgressDialog;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
@@ -23,6 +24,9 @@
 import com.example.studenthub.Fragment.NotificationFragment;
 import com.example.studenthub.Fragment.ProfileFragment;
 import com.example.studenthub.Fragment.SearchFragment;
+import com.example.studenthub.chats.LoadingActivity;
+import com.example.studenthub.firebase.MessagingManager;
+import com.example.studenthub.firebase.interfaces.FirebaseCallBack;
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.android.material.navigation.NavigationBarView;
 import com.google.firebase.auth.FirebaseAuth;
@@ -33,7 +37,7 @@
 
 import java.util.Objects;
 
-public class MainActivity extends AppCompatActivity {
+public class MainActivity extends LoadingActivity {
     FirebaseAuth mAuth = FirebaseAuth.getInstance();
     FirebaseUser firebaseUser;
     // Listener- listen when users logged in / out
@@ -60,6 +64,23 @@
         mAuth.removeAuthStateListener(mAuthListener);
     }
 
+    @Override
+    protected void onResume() {
+        super.onResume();
+        ProgressDialog progressDialog = showLoading("");
+        MessagingManager.cacheUsers(new FirebaseCallBack<String>() {
+            @Override
+            public void onComplete(String object) {
+                progressDialog.dismiss();
+            }
+
+            @Override
+            public void onFailure(Exception e) {
+                progressDialog.dismiss();
+            }
+        });
+    }
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
Index: app/src/main/java/com/example/studenthub/Adapter/ChatMessagesRvAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/Adapter/ChatMessagesRvAdapter.java b/app/src/main/java/com/example/studenthub/Adapter/ChatMessagesRvAdapter.java
new file mode 100644
--- /dev/null	(date 1645199380189)
+++ b/app/src/main/java/com/example/studenthub/Adapter/ChatMessagesRvAdapter.java	(date 1645199380189)
@@ -0,0 +1,72 @@
+package com.example.studenthub.Adapter;
+
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.studenthub.Model.ChatMessage;
+import com.example.studenthub.Model.User;
+import com.example.studenthub.R;
+import com.squareup.picasso.Picasso;
+
+import java.util.List;
+
+public class ChatMessagesRvAdapter extends RecyclerView.Adapter<ChatMessagesRvAdapter.ChatMessagesViewHolder> {
+
+    private List<ChatMessage> chatMessages;
+    private User owner,second;
+    public ChatMessagesRvAdapter(List<ChatMessage> chatMessages,User owner,User second) {
+        this.chatMessages = chatMessages;
+        this.owner = owner;
+        this.second = second;
+    }
+
+    @NonNull
+    @Override
+    public ChatMessagesViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        View v =  LayoutInflater.from(parent.getContext()).inflate(R.layout.chat_message,parent,false);
+        return new ChatMessagesViewHolder(v);
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull ChatMessagesViewHolder holder, int position) {
+        ChatMessage message = chatMessages.get(position);
+        holder.bind(message);
+    }
+
+    @Override
+    public int getItemCount() {
+        return chatMessages.size();
+    }
+
+     class ChatMessagesViewHolder extends RecyclerView.ViewHolder {
+        private ImageView senderImageView;
+        private TextView senderNameTv;
+        private TextView messageContent;
+        public ChatMessagesViewHolder(@NonNull View itemView) {
+            super(itemView);
+            this.senderImageView = itemView.findViewById(R.id.user_image_chat);
+            this.senderNameTv = itemView.findViewById(R.id.user_name_chat);
+            this.messageContent = itemView.findViewById(R.id.user_message_chat);
+        }
+
+        public void bind(ChatMessage message) {
+            if (message.getAuthorId().equals(owner.getId())) {
+                senderNameTv.setText(owner.getFullName());
+                Picasso.get().load(owner.getImageUrl()).into(senderImageView);
+            }else {
+                senderNameTv.setText(second.getFullName());
+                Picasso.get().load(second.getImageUrl()).into(senderImageView);
+            }
+
+            messageContent.setText(message.getMessage());
+        }
+    }
+}
+
Index: app/src/main/java/com/example/studenthub/chats/ChatRoomsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/chats/ChatRoomsActivity.java b/app/src/main/java/com/example/studenthub/chats/ChatRoomsActivity.java
new file mode 100644
--- /dev/null	(date 1645200588313)
+++ b/app/src/main/java/com/example/studenthub/chats/ChatRoomsActivity.java	(date 1645200588313)
@@ -0,0 +1,74 @@
+package com.example.studenthub.chats;
+
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+
+import android.app.ProgressDialog;
+import android.content.Intent;
+import android.os.Bundle;
+import android.view.View;
+
+import com.example.studenthub.Adapter.ChatRoomsRvAdapter;
+import com.example.studenthub.Adapter.UsersRvAdapter;
+import com.example.studenthub.Adapter.interfaces.OnEnterChatRoomListener;
+import com.example.studenthub.Model.ChatRoom;
+import com.example.studenthub.R;
+import com.example.studenthub.firebase.MessagingManager;
+import com.example.studenthub.firebase.interfaces.FirebaseCallBack;
+import com.google.android.material.floatingactionbutton.FloatingActionButton;
+import com.google.gson.Gson;
+
+import java.util.List;
+
+public class ChatRoomsActivity extends LoadingActivity implements OnEnterChatRoomListener {
+
+
+    private RecyclerView chatRoomsRv;
+    private ChatRoomsRvAdapter chatRoomsRvAdapter;
+    private FloatingActionButton addNewChatRoomBtn;
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_chat_rooms);
+
+        chatRoomsRv = findViewById(R.id.chat_rooms_rv);
+        chatRoomsRv.setLayoutManager(new LinearLayoutManager(this));
+        addNewChatRoomBtn = findViewById(R.id.newChatRoom_btn);
+
+        addNewChatRoomBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Intent i = new Intent(ChatRoomsActivity.this,UsersActivity.class);
+                startActivity(i);
+            }
+        });
+           ProgressDialog progressDialog =  showLoading("Chat Rooms");
+
+        MessagingManager.fetchChatRooms(new FirebaseCallBack<List<ChatRoom>>() {
+            @Override
+            public void onComplete(List<ChatRoom> chatRooms) {
+                progressDialog.dismiss();
+                chatRoomsRvAdapter = new ChatRoomsRvAdapter(chatRooms,ChatRoomsActivity.this);
+                chatRoomsRv.setAdapter(chatRoomsRvAdapter);
+            }
+
+            @Override
+            public void onFailure(Exception e) {
+                progressDialog.dismiss();
+                showToast("There was an problem loading chat rooms");
+                System.out.println(e.getLocalizedMessage());
+            }
+        });
+
+    }
+
+    @Override
+    public void enterChatRoom(String roomId) {
+        Intent i = new Intent(this,ChatActivity.class);
+        i.putExtra("roomId",roomId);
+        startActivity(i);
+    }
+
+}
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdkVersion 31\r\n    buildToolsVersion '30.0.3'\r\n\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.studenthub\"\r\n        minSdkVersion 23\r\n        targetSdkVersion 31\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test:runner:1.4.0'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.4.1'\r\n    implementation 'com.google.android.material:material:1.5.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\r\n    implementation 'com.google.firebase:firebase-auth:21.0.1'\r\n    implementation 'com.google.firebase:firebase-firestore:24.0.1'\r\n    implementation 'com.google.firebase:firebase-storage:20.0.0'\r\n    implementation 'com.google.firebase:firebase-database:20.0.3'\r\n    implementation platform('com.google.firebase:firebase-bom:29.1.0')\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'de.hdodenhof:circleimageview:2.2.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.12.0'\r\n    implementation 'com.theartofdev.edmodo:android-image-cropper:2.7.+'\r\n    implementation 'com.rengwuxian.materialedittext:library:2.1.4'\r\n    implementation 'com.airbnb.android:lottie:3.7.0'\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision b272826f11666d78f13ded35bd7fe7fe3e4859b4)
+++ b/app/build.gradle	(date 1645192912219)
@@ -33,11 +33,13 @@
 }
 
 dependencies {
+    implementation 'com.google.firebase:firebase-messaging:23.0.0'
     testImplementation 'junit:junit:4.13.2'
     androidTestImplementation 'androidx.test:runner:1.4.0'
     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
     implementation fileTree(dir: "libs", include: ["*.jar"])
+    implementation 'com.google.code.gson:gson:2.8.7'
     implementation 'androidx.appcompat:appcompat:1.4.1'
     implementation 'com.google.android.material:material:1.5.0'
     implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
Index: app/src/main/java/com/example/studenthub/firebase/MessagingManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/firebase/MessagingManager.java b/app/src/main/java/com/example/studenthub/firebase/MessagingManager.java
new file mode 100644
--- /dev/null	(date 1645201236586)
+++ b/app/src/main/java/com/example/studenthub/firebase/MessagingManager.java	(date 1645201236586)
@@ -0,0 +1,186 @@
+package com.example.studenthub.firebase;
+
+
+import android.util.Pair;
+import android.widget.ArrayAdapter;
+
+import androidx.annotation.NonNull;
+
+import com.example.studenthub.Model.ChatMessage;
+import com.example.studenthub.Model.ChatRoom;
+import com.example.studenthub.Model.User;
+import com.example.studenthub.firebase.interfaces.FirebaseCallBack;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.Query;
+import com.google.firebase.database.ValueEventListener;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.List;
+
+public class MessagingManager {
+
+    public static DatabaseReference chatRoomsRef = FirebaseDatabase.getInstance().getReference().child("ChatRooms");
+    public static DatabaseReference usersRef = FirebaseDatabase.getInstance().getReference().child("users");
+
+
+
+    public static HashMap<String,User> cachedUsers = new HashMap<>();
+    public static void createNewChatRoom(String recipientId, FirebaseCallBack<String> callback) {
+        String uid = FirebaseAuth.getInstance().getUid();
+        DatabaseReference  newRoom = chatRoomsRef.push();
+        ChatRoom room = new ChatRoom(newRoom.getKey(),uid,recipientId);
+        newRoom.setValue(room)
+        .addOnSuccessListener(new OnSuccessListener<Void>() {
+            @Override
+            public void onSuccess(Void unused) {
+                callback.onComplete("Successfully added chat room " + room);
+            }
+        })
+        .addOnFailureListener(new OnFailureListener() {
+            @Override
+            public void onFailure(@NonNull Exception e) {
+                callback.onFailure(e);
+            }
+        });
+    }
+
+    public static void cacheUsers(FirebaseCallBack<String> callBack) {
+        usersRef.get()
+                .addOnSuccessListener(new OnSuccessListener<DataSnapshot>() {
+                    @Override
+                    public void onSuccess(DataSnapshot dataSnapshot) {
+                        for (DataSnapshot childSnap : dataSnapshot.getChildren()) {
+                            User u = childSnap.getValue(User.class);
+                            if(u == null) continue;
+                            cachedUsers.put(u.getId(),u);
+                        }
+                        callBack.onComplete("Finished caching users");
+                    }
+                }).addOnFailureListener(new OnFailureListener() {
+            @Override
+            public void onFailure(@NonNull Exception e) {
+                callBack.onFailure(e);
+            }
+        });
+    }
+
+    public static void deleteChatRoom(String id, FirebaseCallBack<String> callback) {
+        chatRoomsRef.child(id).removeValue()
+                .addOnSuccessListener(new OnSuccessListener<Void>() {
+                    @Override
+                    public void onSuccess(Void unused) {
+                        callback.onComplete("Successfully deleted chat room" + id);
+                    }
+                })
+                .addOnFailureListener(new OnFailureListener() {
+                    @Override
+                    public void onFailure(@NonNull Exception e) {
+                        callback.onFailure(e);
+                    }
+                });
+    }
+
+    public static void sendNewMessage(String roomId,
+                                      String recipientId,
+                                      String messageContent,
+                                      FirebaseCallBack<String> callBack) {
+        String uid = FirebaseAuth.getInstance().getUid();
+        DatabaseReference newMessage = chatRoomsRef.child(roomId).child("chatMessages")
+                .push();
+        ChatMessage message = new ChatMessage(newMessage.getKey(),uid,recipientId,messageContent);
+        newMessage.setValue(message)
+                .addOnSuccessListener(new OnSuccessListener<Void>() {
+                    @Override
+                    public void onSuccess(Void unused) {
+                        callBack.onComplete("Successfully sent message" + message);
+                    }
+                })
+                .addOnFailureListener(new OnFailureListener() {
+                    @Override
+                    public void onFailure(@NonNull Exception e) {
+                        callBack.onFailure(e);
+                    }
+                });
+    }
+
+    public static ValueEventListener listenOnRoom(String roomId,
+                                                  FirebaseCallBack<Pair<List<ChatMessage>,ChatRoom>> callback) {
+
+        Query query = chatRoomsRef.child(roomId);
+        ValueEventListener listener = new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                ChatRoom room = snapshot.getValue(ChatRoom.class);
+                if(room==null) return;
+                List<ChatMessage> chatMessages = new ArrayList<>(room.getChatMessages().values());
+                Collections.sort(chatMessages);
+                room.setChatMessages(null); // clean a bit
+                callback.onComplete(new Pair<>(chatMessages,room));
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+                callback.onFailure(error.toException());
+            }
+        };
+        query.addValueEventListener(listener);
+        return listener;
+    }
+
+
+    public static Pair<User,User> getChatRoomUsers(ChatRoom room) {
+        String ownerId = room.getOwnerId();
+        String secondUserId = room.getSecondUserId();
+        return new Pair<>(cachedUsers.get(ownerId),cachedUsers.get(secondUserId));
+    }
+
+    public static void removeChatRoomListener(String roomId, ValueEventListener listener) {
+        chatRoomsRef.child(roomId).removeEventListener(listener);
+    }
+
+    public static User getUserById(String id) {
+        return cachedUsers.get(id);
+    }
+
+    public static void fetchChatRooms(FirebaseCallBack<List<ChatRoom>> callBack)
+    {
+        String uid = FirebaseAuth.getInstance().getUid();
+        chatRoomsRef.get()
+                .addOnSuccessListener(new OnSuccessListener<DataSnapshot>() {
+                    @Override
+                    public void onSuccess(DataSnapshot dataSnapshot) {
+                        List<ChatRoom> chatRooms = new ArrayList<>();
+                        String owner,secondUser;
+
+                        for(DataSnapshot childSnapshot : dataSnapshot.getChildren()) {
+                            owner = ((String) childSnapshot.child("ownerId").getValue());
+                            secondUser = ((String) childSnapshot.child("secondUserId").getValue());
+                            if(owner == null || secondUser == null)
+                                continue;
+                            if (owner.equals(uid) || secondUser.equals(uid)) {
+                                chatRooms.add(childSnapshot.getValue(ChatRoom.class));
+                            }
+                        }
+                        callBack.onComplete(chatRooms);
+                    }
+                }).addOnFailureListener(new OnFailureListener() {
+            @Override
+            public void onFailure(@NonNull Exception e) {
+                callBack.onFailure(e);
+            }
+        });
+    }
+
+
+
+
+
+}
Index: app/src/main/res/layout/activity_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/drawer_layout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"#3F97BA\"\r\n    tools:context=\".Login\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:id=\"@+id/toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"?attr/actionBarSize\"\r\n            android:background=\"?attr/colorPrimaryDark\"\r\n            android:theme=\"@style/ThemeOverlay.AppCompat.Dark\"\r\n            app:layout_scrollFlags=\"scroll|enterAlways\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/studenthub_logo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/toolbar\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"25dp\"\r\n            android:fontFamily=\"@font/bitter\"\r\n            android:text=\"@string/app_name\"\r\n            android:textColor=\"#000000\"\r\n            android:textSize=\"25sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/studenthub_sentence\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/studenthub_logo\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"15dp\"\r\n            android:fontFamily=\"@font/bitter\"\r\n            android:text=\"@string/studenthub_sentence\"\r\n            android:textColor=\"#FFFFFF\"\r\n            android:textSize=\"19sp\" />\r\n\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            android:id=\"@+id/email_layout\"\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/studenthub_sentence\"\r\n            android:layout_marginStart=\"20dp\"\r\n            android:layout_marginTop=\"110dp\"\r\n            android:gravity=\"start\"\r\n            android:paddingEnd=\"30dp\"\r\n            app:boxStrokeColor=\"@color/black\"\r\n            app:errorEnabled=\"true\"\r\n            tools:ignore=\"RtlSymmetry\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/text_input_email\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:drawableEnd=\"@drawable/ic_baseline_mail_24\"\r\n                android:hint=\"@string/e_mail_address\"\r\n                android:inputType=\"textEmailAddress\"\r\n                android:maxLength=\"25\"\r\n                android:textColorHint=\"#212121\" />\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            android:id=\"@+id/password_layout\"\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/email_layout\"\r\n            android:layout_marginStart=\"20dp\"\r\n            android:gravity=\"start\"\r\n            android:paddingEnd=\"30dp\"\r\n            app:boxStrokeColor=\"@color/black\"\r\n            app:counterEnabled=\"true\"\r\n            app:counterMaxLength=\"12\"\r\n            app:counterOverflowTextAppearance=\"@style/CounterOverFlow\"\r\n            app:counterTextAppearance=\"@style/CounterText\"\r\n            app:errorEnabled=\"true\"\r\n            app:passwordToggleEnabled=\"true\"\r\n            tools:ignore=\"RtlSymmetry\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/text_input_password\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:drawableTint=\"@color/black\"\r\n                android:hint=\"@string/password\"\r\n                android:inputType=\"textPassword\"\r\n                android:maxLength=\"12\"\r\n                android:textColorHint=\"#212121\" />\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        <com.google.android.material.button.MaterialButton\r\n            android:id=\"@+id/login_button\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/password_layout\"\r\n            android:layout_marginStart=\"50dp\"\r\n            android:layout_marginEnd=\"50dp\"\r\n            android:backgroundTint=\"#1F5165\"\r\n            android:text=\"@string/login_btn\"\r\n            android:textAppearance=\"@style/TextAppearance.AppCompat.Widget.Button\"\r\n            android:textColor=\"#90CAF9\"\r\n            android:textSize=\"13sp\"\r\n            app:cornerRadius=\"40dp\">\r\n        </com.google.android.material.button.MaterialButton>\r\n\r\n        <com.google.android.material.button.MaterialButton\r\n            android:id=\"@+id/login_anonymous_button\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/password_layout\"\r\n            android:layout_marginStart=\"50dp\"\r\n            android:layout_marginTop=\"68dp\"\r\n            android:layout_marginEnd=\"50dp\"\r\n            android:backgroundTint=\"#1F5165\"\r\n            android:text=\"@string/login_anonymous_btn\"\r\n            android:textAppearance=\"@style/TextAppearance.AppCompat.Widget.Button\"\r\n            android:textColor=\"#90CAF9\"\r\n            android:textSize=\"13sp\"\r\n            app:cornerRadius=\"40dp\">\r\n        </com.google.android.material.button.MaterialButton>\r\n\r\n        <com.airbnb.lottie.LottieAnimationView\r\n            android:id=\"@+id/login_animation\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"100dp\"\r\n            android:layout_below=\"@+id/login_anonymous_button\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginStart=\"155dp\"\r\n            android:layout_marginTop=\"50dp\"\r\n            android:layout_marginEnd=\"156dp\"\r\n            android:layout_marginBottom=\"10dp\"\r\n            android:scaleX=\"3\"\r\n            android:scaleY=\"3\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.5\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/login_button\"\r\n            app:lottie_autoPlay=\"true\"\r\n            app:lottie_loop=\"true\"\r\n            app:lottie_rawRes=\"@raw/login\"\r\n            tools:ignore=\"ImageContrastCheck\" />\r\n    </RelativeLayout>\r\n\r\n    <com.google.android.material.navigation.NavigationView\r\n        android:id=\"@+id/navigation_view\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_gravity=\"start\"\r\n        app:headerLayout=\"@layout/header_layout\"\r\n        app:menu=\"@menu/drawer_menu\">\r\n    </com.google.android.material.navigation.NavigationView>\r\n\r\n</androidx.drawerlayout.widget.DrawerLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_login.xml b/app/src/main/res/layout/activity_login.xml
--- a/app/src/main/res/layout/activity_login.xml	(revision b272826f11666d78f13ded35bd7fe7fe3e4859b4)
+++ b/app/src/main/res/layout/activity_login.xml	(date 1645186748382)
@@ -65,7 +65,6 @@
                 android:id="@+id/text_input_email"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:drawableEnd="@drawable/ic_baseline_mail_24"
                 android:hint="@string/e_mail_address"
                 android:inputType="textEmailAddress"
                 android:maxLength="25"
Index: app/src/main/java/com/example/studenthub/PreferencesUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/PreferencesUtils.java b/app/src/main/java/com/example/studenthub/PreferencesUtils.java
new file mode 100644
--- /dev/null	(date 1645186748446)
+++ b/app/src/main/java/com/example/studenthub/PreferencesUtils.java	(date 1645186748446)
@@ -0,0 +1,58 @@
+package com.example.studenthub;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.stream.Collectors;
+
+public class  PreferencesUtils {
+private String  FILE_NAME;
+private SharedPreferences  mPrefs;
+
+private String KEY_TOKENS = "key_tokens";
+private String KEY_MY_TOKEN = "key_my_token";
+
+        public PreferencesUtils(Context context) {
+           // mPrefs = context.getSharedPreferences(Context.MODE_PRIVATE);
+        }
+
+       public  void  addNewToken(String token) {
+        List<String> tokens = getTokens();
+        if (!tokens.contains(token)) {
+            tokens.add(token);
+        }
+         saveTokens(tokens);
+        }
+
+        public void  saveTokens(List<String> tokens) {
+            String input = "";
+            for ( String t : tokens) {
+                input += t + "|";
+            }
+            mPrefs.edit().putString(KEY_TOKENS, input).apply();
+        }
+
+        public List<String> getTokens() {
+            String tokensString = mPrefs.getString(KEY_TOKENS, "");
+            if (tokensString != null && !tokensString.equals("")) {
+                return new ArrayList<>(Arrays.asList(tokensString.split("|")));
+            }
+            return null;
+        }
+
+        void  saveMyToken(String token) {
+             mPrefs.edit().putString(KEY_MY_TOKEN, token).apply();
+        }
+
+        public String  getMyToken()  {
+        String  token = mPrefs.getString(KEY_MY_TOKEN, null);
+          if(token != null && !token.isEmpty()) {
+                    return token;
+                }else {
+              return null;
+          }
+        }
+        }
\ No newline at end of file
Index: app/src/main/res/layout/chat_message.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/chat_message.xml b/app/src/main/res/layout/chat_message.xml
new file mode 100644
--- /dev/null	(date 1645189554496)
+++ b/app/src/main/res/layout/chat_message.xml	(date 1645189554496)
@@ -0,0 +1,60 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:background="@color/white"
+    android:layout_margin="10dp"
+    android:layout_height="wrap_content">
+
+    <LinearLayout
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:layout_width="0dp"
+        android:orientation="vertical"
+        android:layout_height="wrap_content">
+
+        <LinearLayout
+            android:orientation="horizontal"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content">
+
+     <androidx.cardview.widget.CardView
+         app:cardCornerRadius="12.5dp"
+         android:backgroundTint="@color/colorGreen"
+         android:layout_width="wrap_content"
+         android:layout_height="wrap_content">
+        <ImageView
+            android:id="@+id/user_image_chat"
+            android:background="@android:color/transparent"
+            android:src="@drawable/ic_person"
+            android:layout_width="25dp"
+            android:layout_height="25dp"/>
+     </androidx.cardview.widget.CardView>
+        <TextView
+            android:id="@+id/user_name_chat"
+            android:textColor="@color/black"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="4dp"
+            android:text="user name"/>
+
+        </LinearLayout>
+        <androidx.cardview.widget.CardView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="32dp"
+            android:backgroundTint="@color/colorGreen"
+            app:cardCornerRadius="12dp">
+            <TextView
+                android:id="@+id/user_message_chat"
+                android:layout_width="wrap_content"
+                android:padding="4dp"
+                android:layout_height="wrap_content"
+                android:text="Hello from username"/>
+        </androidx.cardview.widget.CardView>
+    </LinearLayout>
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/studenthub/firebase/interfaces/FirebaseCallBack.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/firebase/interfaces/FirebaseCallBack.java b/app/src/main/java/com/example/studenthub/firebase/interfaces/FirebaseCallBack.java
new file mode 100644
--- /dev/null	(date 1645186748452)
+++ b/app/src/main/java/com/example/studenthub/firebase/interfaces/FirebaseCallBack.java	(date 1645186748452)
@@ -0,0 +1,7 @@
+package com.example.studenthub.firebase.interfaces;
+
+public interface FirebaseCallBack<T> {
+
+    void onComplete(T object);
+    void onFailure(Exception e);
+}
Index: app/src/main/res/drawable/ic_baseline_notifications_active_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_baseline_notifications_active_24.xml b/app/src/main/res/drawable/ic_baseline_notifications_active_24.xml
new file mode 100644
--- /dev/null	(date 1645186748477)
+++ b/app/src/main/res/drawable/ic_baseline_notifications_active_24.xml	(date 1645186748477)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+  <path
+      android:fillColor="@android:color/white"
+      android:pathData="M7.58,4.08L6.15,2.65C3.75,4.48 2.17,7.3 2.03,10.5h2c0.15,-2.65 1.51,-4.97 3.55,-6.42zM19.97,10.5h2c-0.15,-3.2 -1.73,-6.02 -4.12,-7.85l-1.42,1.43c2.02,1.45 3.39,3.77 3.54,6.42zM18,11c0,-3.07 -1.64,-5.64 -4.5,-6.32L13.5,4c0,-0.83 -0.67,-1.5 -1.5,-1.5s-1.5,0.67 -1.5,1.5v0.68C7.63,5.36 6,7.92 6,11v5l-2,2v1h16v-1l-2,-2v-5zM12,22c0.14,0 0.27,-0.01 0.4,-0.04 0.65,-0.14 1.18,-0.58 1.44,-1.18 0.1,-0.24 0.15,-0.5 0.15,-0.78h-4c0.01,1.1 0.9,2 2.01,2z"/>
+</vector>
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\Yaniv\\.android\\avd\\Pixel_3a_XL_API_29.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2022-02-17T18:44:21.550160Z\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision b272826f11666d78f13ded35bd7fe7fe3e4859b4)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1645186748440)
@@ -7,11 +7,11 @@
         <deviceKey>
           <Key>
             <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="C:\Users\Yaniv\.android\avd\Pixel_3a_XL_API_29.avd" />
+            <value value="C:\Users\or448\.android\avd\Pixel_2_API_30.avd" />
           </Key>
         </deviceKey>
       </Target>
     </targetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2022-02-17T18:44:21.550160Z" />
+    <timeTargetWasSelectedWithDropDown value="2022-02-17T12:32:37.279900200Z" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/colorPrimary\"\r\n    tools:context=\"Fragment.HomeFragment\">\r\n\r\n    <com.google.android.material.appbar.AppBarLayout\r\n        android:id=\"@+id/bar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"#EAC7C7\">\r\n\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:id=\"@+id/toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"#EAC7C7\">\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/logo\"\r\n                    android:layout_width=\"180dp\"\r\n                    android:layout_height=\"35dp\"\r\n                    android:layout_centerInParent=\"true\"\r\n                    android:fontFamily=\"@font/bitter\"\r\n                    android:text=\"@string/app_name\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"25sp\"\r\n                    android:textStyle=\"bold\" />\r\n            </RelativeLayout>\r\n        </androidx.appcompat.widget.Toolbar>\r\n    </com.google.android.material.appbar.AppBarLayout>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recycler_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/bar\" />\r\n</RelativeLayout>\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_home.xml b/app/src/main/res/layout/fragment_home.xml
--- a/app/src/main/res/layout/fragment_home.xml	(revision b272826f11666d78f13ded35bd7fe7fe3e4859b4)
+++ b/app/src/main/res/layout/fragment_home.xml	(date 1645194539109)
@@ -41,5 +41,16 @@
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_below="@id/bar" />
+
+
+
+    <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:id="@+id/chat_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_alignParentEnd="true"
+        android:layout_margin="16dp"
+        android:src="@drawable/background_pic_message"/>
 </RelativeLayout>
 
Index: app/src/main/java/com/example/studenthub/Adapter/UsersRvAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/Adapter/UsersRvAdapter.java b/app/src/main/java/com/example/studenthub/Adapter/UsersRvAdapter.java
new file mode 100644
--- /dev/null	(date 1645192037200)
+++ b/app/src/main/java/com/example/studenthub/Adapter/UsersRvAdapter.java	(date 1645192037200)
@@ -0,0 +1,84 @@
+package com.example.studenthub.Adapter;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.studenthub.Adapter.interfaces.OnCreateRoomListener;
+import com.example.studenthub.Model.User;
+import com.example.studenthub.R;
+
+import java.util.List;
+
+public class UsersRvAdapter extends RecyclerView.Adapter<UsersRvAdapter.UsersViewHolder> {
+
+    private List<User>users;
+    private OnCreateRoomListener createRoomListener;
+    public UsersRvAdapter(List<User> users, OnCreateRoomListener createRoomListener) {
+        this.users = users;
+        this.createRoomListener = createRoomListener;
+    }
+
+
+    @NonNull
+    @Override
+    public UsersViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+       View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.chat_room,parent,false);
+       return new UsersViewHolder(v);
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull UsersViewHolder holder, int position) {
+        User user = users.get(position);
+        holder.bind(user);
+    }
+
+    @Override
+    public int getItemCount() {
+        return users.size();
+    }
+
+     class UsersViewHolder extends RecyclerView.ViewHolder {
+        private ImageView uImageView;
+        private TextView uNameTV;
+        public UsersViewHolder(@NonNull View itemView) {
+            super(itemView);
+            this.uImageView = itemView.findViewById(R.id.user_image_chat_room);
+            this.uNameTV = itemView.findViewById(R.id.user_name_chat_room);
+        }
+
+        public void bind(User user) {
+            // @TODO : set Image
+            itemView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View view) {
+                    AlertDialog alert = showCreateRoomAlert(itemView.getContext(),user);
+                    alert.show();
+                }
+            });
+            uNameTV.setText("Start Chat With: " +  user.getFullName());
+        }
+    }
+
+    public  AlertDialog showCreateRoomAlert(Context context, User user) {
+        AlertDialog alert = new AlertDialog.Builder(context)
+                .setTitle("StudentsHub")
+                .setMessage("Would you like to create a chat room with  " + user.getFullName())
+                .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialogInterface, int i) {
+                        createRoomListener.createRoom(user.getId());
+                    }
+                })
+                .setNegativeButton("No",null).create();
+        return alert;
+    }
+}
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Thu Feb 04 23:27:04 IST 2021\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-7.2-all.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
--- a/gradle/wrapper/gradle-wrapper.properties	(revision b272826f11666d78f13ded35bd7fe7fe3e4859b4)
+++ b/gradle/wrapper/gradle-wrapper.properties	(date 1645186748466)
@@ -1,6 +1,6 @@
-#Thu Feb 04 23:27:04 IST 2021
+#Wed Feb 16 03:19:32 IST 2022
 distributionBase=GRADLE_USER_HOME
+distributionUrl=https\://services.gradle.org/distributions/gradle-7.2-bin.zip
 distributionPath=wrapper/dists
-zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-7.2-all.zip
+zipStoreBase=GRADLE_USER_HOME
Index: app/src/main/java/com/example/studenthub/Adapter/interfaces/OnCreateRoomListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/Adapter/interfaces/OnCreateRoomListener.java b/app/src/main/java/com/example/studenthub/Adapter/interfaces/OnCreateRoomListener.java
new file mode 100644
--- /dev/null	(date 1645192880132)
+++ b/app/src/main/java/com/example/studenthub/Adapter/interfaces/OnCreateRoomListener.java	(date 1645192880132)
@@ -0,0 +1,8 @@
+package com.example.studenthub.Adapter.interfaces;
+
+import com.example.studenthub.Model.User;
+
+public interface OnCreateRoomListener {
+
+    void createRoom(String recipientId);
+}
Index: app/src/main/java/com/example/studenthub/chats/ChatActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/chats/ChatActivity.java b/app/src/main/java/com/example/studenthub/chats/ChatActivity.java
new file mode 100644
--- /dev/null	(date 1645200588300)
+++ b/app/src/main/java/com/example/studenthub/chats/ChatActivity.java	(date 1645200588300)
@@ -0,0 +1,110 @@
+package com.example.studenthub.chats;
+
+import android.app.ProgressDialog;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.Message;
+import android.util.Pair;
+import android.view.Menu;
+import android.view.View;
+import android.widget.Button;
+import android.widget.TextView;
+
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.studenthub.Adapter.ChatMessagesRvAdapter;
+import com.example.studenthub.Model.ChatMessage;
+import com.example.studenthub.Model.ChatRoom;
+import com.example.studenthub.Model.User;
+import com.example.studenthub.R;
+import com.example.studenthub.firebase.MessagingManager;
+import com.example.studenthub.firebase.interfaces.FirebaseCallBack;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.database.ValueEventListener;
+import com.google.gson.Gson;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class ChatActivity extends LoadingActivity {
+
+
+    RecyclerView messagesRv;
+    ChatMessagesRvAdapter messagesRvAdapter;
+    Button sendButton;
+    TextView messageTv;
+    String roomId;
+
+
+    ValueEventListener chatRoomListener;
+    ChatRoom room;
+    User owner,second;
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_chat);
+        sendButton = findViewById(R.id.send_message_btn);
+        messageTv = findViewById(R.id.message_et);
+        messagesRv = findViewById(R.id.chat_rv);
+        messagesRv.setLayoutManager(new LinearLayoutManager(this));
+        Intent i = getIntent();
+       ProgressDialog progressDialog =  showLoading("Messages");
+        if(i != null) {
+            roomId = i.getStringExtra("roomId");
+
+            chatRoomListener = MessagingManager.listenOnRoom(roomId, new FirebaseCallBack<Pair<List<ChatMessage>,ChatRoom>>() {
+                @Override
+                public void onComplete(Pair<List<ChatMessage>,ChatRoom> response) {
+                    if(room ==null || owner==null || second==null) {
+                        progressDialog.dismiss();
+                        Pair<User,User> users =  MessagingManager.getChatRoomUsers(response.second);
+                        owner = users.first;
+                        second = users.second;
+                    }
+                    room = response.second;
+                    messagesRvAdapter = new ChatMessagesRvAdapter(response.first,owner,second);
+                    messagesRv.setAdapter(messagesRvAdapter);
+                }
+
+                @Override
+                public void onFailure(Exception e) {
+                    if(ChatActivity.this.room ==null)  progressDialog.dismiss();
+                    showToast("There was a problem loading messages");
+                    System.out.println(e.getLocalizedMessage());
+                }
+            });
+
+            sendButton.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View view) {
+                    if(room ==null) return;
+                    String content = messageTv.getText().toString();
+                    if(content.isEmpty()) return;
+                    String uid = FirebaseAuth.getInstance().getUid();
+                    String recipientId = room.getOwnerId().equals(uid) ? room.getSecondUserId() : room.getOwnerId();
+                    MessagingManager.sendNewMessage(roomId,recipientId , content, new FirebaseCallBack<String>() {
+                        @Override
+                        public void onComplete(String successMessage) {
+                            System.out.println(successMessage);
+                        }
+
+                        @Override
+                        public void onFailure(Exception e) {
+                            showToast("There was a problem sending message");
+                        }
+                    });
+                }
+            });
+        }
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        if(roomId!=null)
+            MessagingManager.removeChatRoomListener(roomId,chatRoomListener);
+    }
+}
Index: app/src/main/res/layout/keyboard.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/keyboard.xml b/app/src/main/res/layout/keyboard.xml
new file mode 100644
--- /dev/null	(date 1645196711844)
+++ b/app/src/main/res/layout/keyboard.xml	(date 1645196711844)
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="horizontal"
+    android:layout_width="match_parent"
+    android:background="@color/white"
+    android:paddingHorizontal="8dp"
+    android:layout_height="wrap_content">
+
+    <EditText
+        android:id="@+id/message_et"
+        android:layout_width="0dp"
+        android:textColor="@color/black"
+        android:layout_weight="1"
+        android:hint="Enter some message"
+        android:textColorHint="@color/colorAccent"
+        android:layout_height="wrap_content"/>
+    <Button
+        android:id="@+id/send_message_btn"
+        android:layout_width="75dp"
+        android:textColor="@color/white"
+        android:layout_height="wrap_content"
+        android:text="Send"
+        android:textAllCaps="false"/>
+</LinearLayout>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/drawable-anydpi/ic_favorite.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/drawable-anydpi/ic_grid.xml\" value=\"0.1225\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/drawable-hdpi/ic_add_a_photo_material.xml\" value=\"0.124\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/drawable-xxhdpi/ic_add_a_photo_material.xml\" value=\"0.124\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/drawable/button_background.xml\" value=\"0.1225\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/drawable/ic_person_black_24dp.xml\" value=\"0.1225\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_comments.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_edit_profile.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_login.xml\" value=\"0.176\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_main.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_post.xml\" value=\"0.31654676258992803\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_register.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_welcome_animation.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/comment_item.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/create_account_animation.xml\" value=\"0.1721014492753623\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/create_account_dialog.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_account_creation.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_forgot_password.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_home.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_notification.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_post_detail.xml\" value=\"0.16799999999999998\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_profile.xml\" value=\"0.27202472952086554\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_search.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/guest_dailog.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/header_layout.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/loading_dialog.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/notification.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/notification_item.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/photos_item.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/post_item.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/progress_dialog.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/layout/user_item.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/menu/bottom_navigation.xml\" value=\"0.11302083333333333\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/menu/drawer_menu.xml\" value=\"0.11145833333333334\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/menu/main_menu.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/ComputerScience/Student_Hub/app/src/main/res/menu/search_menu.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/activity_comments.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/activity_edit_profile.xml\" value=\"0.2916666666666667\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/activity_login.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/activity_main.xml\" value=\"0.4005208333333333\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/activity_post.xml\" value=\"0.4005208333333333\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/activity_register.xml\" value=\"0.4005208333333333\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/activity_welcome_animation.xml\" value=\"0.14218009478672985\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/comment_item.xml\" value=\"0.4005208333333333\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/fragment_account_creation.xml\" value=\"0.39947916666666666\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/fragment_forgot_password.xml\" value=\"0.26510416666666664\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/fragment_home.xml\" value=\"0.4005208333333333\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/fragment_notification.xml\" value=\"0.4005208333333333\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/fragment_post_detail.xml\" value=\"0.4005208333333333\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/fragment_profile.xml\" value=\"0.4005208333333333\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/fragment_search.xml\" value=\"0.4005208333333333\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/notification_item.xml\" value=\"0.4005208333333333\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/photos_item.xml\" value=\"0.4005208333333333\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/post_item.xml\" value=\"0.4005208333333333\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/progress_dialog.xml\" value=\"0.39947916666666666\" />\r\n        <entry key=\"..\\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/user_item.xml\" value=\"0.4005208333333333\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision b272826f11666d78f13ded35bd7fe7fe3e4859b4)
+++ b/.idea/misc.xml	(date 1645202313814)
@@ -4,41 +4,29 @@
     <option name="filePathToZoomLevelMap">
       <map>
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/drawable-anydpi/ic_favorite.xml" value="0.1" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/drawable-anydpi/ic_grid.xml" value="0.1225" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/drawable-hdpi/ic_add_a_photo_material.xml" value="0.124" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/drawable-xxhdpi/ic_add_a_photo_material.xml" value="0.124" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/drawable/button_background.xml" value="0.1225" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/drawable/ic_person_black_24dp.xml" value="0.1225" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_comments.xml" value="0.264" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_edit_profile.xml" value="0.2" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_login.xml" value="0.176" />
+        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_comments.xml" value="0.2" />
+        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_edit_profile.xml" value="0.11302083333333333" />
+        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_login.xml" value="0.4" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_main.xml" value="0.11302083333333333" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_post.xml" value="0.31654676258992803" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_register.xml" value="0.11302083333333333" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/activity_welcome_animation.xml" value="0.11302083333333333" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/comment_item.xml" value="0.264" />
+        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/comment_item.xml" value="0.11302083333333333" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/create_account_animation.xml" value="0.1721014492753623" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/create_account_dialog.xml" value="0.11302083333333333" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_account_creation.xml" value="0.264" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_forgot_password.xml" value="0.264" />
+        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_forgot_password.xml" value="0.11302083333333333" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_home.xml" value="0.11302083333333333" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_notification.xml" value="0.11302083333333333" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_post_detail.xml" value="0.16799999999999998" />
+        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_post_detail.xml" value="0.11302083333333333" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_profile.xml" value="0.27202472952086554" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/fragment_search.xml" value="0.11302083333333333" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/guest_dailog.xml" value="0.4" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/header_layout.xml" value="0.264" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/loading_dialog.xml" value="0.11302083333333333" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/notification.xml" value="0.4" />
+        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/header_layout.xml" value="0.11302083333333333" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/notification_item.xml" value="0.264" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/photos_item.xml" value="0.11302083333333333" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/post_item.xml" value="0.11302083333333333" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/progress_dialog.xml" value="0.11302083333333333" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/user_item.xml" value="0.4" />
+        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/layout/user_item.xml" value="0.6" />
         <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/menu/bottom_navigation.xml" value="0.11302083333333333" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/menu/drawer_menu.xml" value="0.11145833333333334" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/menu/main_menu.xml" value="0.264" />
-        <entry key="..\:/ComputerScience/Student_Hub/app/src/main/res/menu/search_menu.xml" value="0.2" />
         <entry key="..\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/activity_comments.xml" value="0.4" />
         <entry key="..\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/activity_edit_profile.xml" value="0.2916666666666667" />
         <entry key="..\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/activity_login.xml" value="0.264" />
@@ -59,6 +47,21 @@
         <entry key="..\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/post_item.xml" value="0.4005208333333333" />
         <entry key="..\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/progress_dialog.xml" value="0.39947916666666666" />
         <entry key="..\:/Users/Nimrod/Desktop/Student_Hub/app/src/main/res/layout/user_item.xml" value="0.4005208333333333" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/drawable-anydpi/ic_add.xml" value="0.1" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/drawable-anydpi/ic_person.xml" value="0.1" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/drawable/background_pic_message.xml" value="0.1" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/layout/activity_chat.xml" value="0.10666666666666667" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/layout/activity_chat_rooms.xml" value="0.17552083333333332" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/layout/activity_comments.xml" value="0.1" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/layout/activity_login.xml" value="0.1" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/layout/activity_users.xml" value="0.17552083333333332" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/layout/chat_message.xml" value="0.22" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/layout/chat_room.xml" value="0.17552083333333332" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/layout/fragment_home.xml" value="0.1" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/layout/fragment_profile.xml" value="0.3333333333333333" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/layout/keyboard.xml" value="0.17552083333333332" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/layout/personalist.xml" value="0.1" />
+        <entry key="..\:/Users/or448/AndroidStudioProjects/Student_Hub/app/src/main/res/layout/post_item.xml" value="0.1" />
       </map>
     </option>
   </component>
Index: app/src/main/res/layout/activity_users.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_users.xml b/app/src/main/res/layout/activity_users.xml
new file mode 100644
--- /dev/null	(date 1645190988675)
+++ b/app/src/main/res/layout/activity_users.xml	(date 1645190988675)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:animateLayoutChanges="true"
+    android:background="@color/white"
+    tools:context=".chats.UsersActivity">
+    <TextView
+        android:id="@+id/chat_users_title_tv"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        android:layout_margin="32dp"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textColor="@color/colorGreen"
+        android:textStyle="bold"
+        android:textSize="32dp"
+        android:text="Create Chat Room"/>
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/users_rv"
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        tools:listitem="@layout/chat_room"
+        app:layout_constraintTop_toBottomOf="@id/chat_users_title_tv"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"/>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/studenthub/chats/UsersActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/chats/UsersActivity.java b/app/src/main/java/com/example/studenthub/chats/UsersActivity.java
new file mode 100644
--- /dev/null	(date 1645195631198)
+++ b/app/src/main/java/com/example/studenthub/chats/UsersActivity.java	(date 1645195631198)
@@ -0,0 +1,68 @@
+package com.example.studenthub.chats;
+
+import android.app.ProgressDialog;
+import android.os.Bundle;
+import android.widget.ProgressBar;
+import android.widget.Toast;
+
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.studenthub.Adapter.UsersRvAdapter;
+import com.example.studenthub.Adapter.interfaces.OnCreateRoomListener;
+import com.example.studenthub.Model.User;
+import com.example.studenthub.R;
+import com.example.studenthub.firebase.FollowingManager;
+import com.example.studenthub.firebase.MessagingManager;
+import com.example.studenthub.firebase.interfaces.FirebaseCallBack;
+
+import java.util.List;
+
+public class UsersActivity  extends LoadingActivity implements OnCreateRoomListener {
+
+
+    private RecyclerView rvUsers;
+    private UsersRvAdapter usersRvAdapter;
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_users);
+        rvUsers = findViewById(R.id.users_rv);
+        rvUsers.setLayoutManager(new LinearLayoutManager(this));
+        ProgressDialog progressDialog = showLoading("Followers");
+        FollowingManager.getFollowing(new FirebaseCallBack<List<User>>() {
+            @Override
+            public void onComplete(List<User> users) {
+                usersRvAdapter = new UsersRvAdapter(users,UsersActivity.this);
+                rvUsers.setAdapter(usersRvAdapter);
+                progressDialog.dismiss();
+            }
+
+            @Override
+            public void onFailure(Exception e) {
+                progressDialog.dismiss();
+                showToast("There was a problem loading followers");
+            }
+        });
+    }
+
+    @Override
+    public void createRoom(String recipientId) {
+        MessagingManager.createNewChatRoom(recipientId, new FirebaseCallBack<String>() {
+            @Override
+            public void onComplete(String successMessage) {
+                System.out.println(successMessage);
+                showToast(successMessage);
+                finish();
+            }
+
+            @Override
+            public void onFailure(Exception e) {
+                showToast("There was a problem creating chat room");
+                System.out.println(e.getLocalizedMessage());
+            }
+        });
+    }
+}
Index: app/src/main/java/com/example/studenthub/Fragment/ProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.studenthub.Fragment;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.studenthub.Adapter.PhotoAdapter;\r\nimport com.example.studenthub.EditProfile;\r\nimport com.example.studenthub.Login;\r\nimport com.example.studenthub.Model.Post;\r\nimport com.example.studenthub.Model.User;\r\nimport com.example.studenthub.R;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.ChildEventListener;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\nimport static android.content.Context.MODE_PRIVATE;\r\n\r\npublic class ProfileFragment extends Fragment {\r\n    ImageView profilePicture, exitApp;\r\n    TextView posts, followers, following, fullname, bio, username;\r\n    Button edit_profile;\r\n    RecyclerView recyclerView;\r\n    PhotoAdapter photoAdapter;\r\n    List<Post> postList;\r\n    FirebaseUser firebaseUser;\r\n    String id;\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_profile, container, false);\r\n\r\n        // Here we get the exact user ID from search box, if any\r\n        SharedPreferences prefs = getContext().getSharedPreferences(\"PREFS\", MODE_PRIVATE);\r\n        id = prefs.getString(\"profileid\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n        firebaseUser = FirebaseAuth.getInstance().getCurrentUser();\r\n\r\n        profilePicture = view.findViewById(R.id.fragment_profile_picture);\r\n        exitApp = view.findViewById(R.id.exit_app);\r\n        posts = view.findViewById(R.id.posts);\r\n        followers = view.findViewById(R.id.followers);\r\n        following = view.findViewById(R.id.following);\r\n        fullname = view.findViewById(R.id.fullname);\r\n        bio = view.findViewById(R.id.bio);\r\n        username = view.findViewById(R.id.username_profile);\r\n        edit_profile = view.findViewById(R.id.edit_profile);\r\n\r\n        recyclerView = view.findViewById(R.id.recycler_view);\r\n        recyclerView.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager = new GridLayoutManager(getContext(), 3);\r\n        recyclerView.setLayoutManager(linearLayoutManager);\r\n        postList = new ArrayList<>();\r\n        photoAdapter = new PhotoAdapter(getContext(), postList);\r\n        recyclerView.setAdapter(photoAdapter);\r\n\r\n        userInfo();\r\n        getFollowers();\r\n        getNumberOfPosts();\r\n        getPhotos();\r\n\r\n        // If a user looks at his own profile\r\n        if (id.equals(firebaseUser.getUid())) {\r\n            edit_profile.setText(R.string.edit_profile);\r\n        } else {\r\n            checkFollow();\r\n        }\r\n\r\n        edit_profile.setOnClickListener(edit_profile_view -> {\r\n            String buttonString = edit_profile.getText().toString();\r\n\r\n            if (buttonString.equals(getString(R.string.edit_profile)))\r\n                startActivity(new Intent(getContext(), EditProfile.class));\r\n            else if (buttonString.equals(getString(R.string.follow_btn))) {\r\n                FirebaseDatabase.getInstance().getReference().child(\"Follow\").child(firebaseUser.getUid())\r\n                        .child(\"following\").child(id).setValue(true);\r\n                FirebaseDatabase.getInstance().getReference().child(\"Follow\").child(id)\r\n                        .child(\"followers\").child(firebaseUser.getUid()).setValue(true);\r\n\r\n                getNotifications(); // If a new follow is created, update notifications\r\n\r\n            } else if (buttonString.equals(getString(R.string.following))) {\r\n                FirebaseDatabase.getInstance().getReference().child(\"Follow\").child(firebaseUser.getUid())\r\n                        .child(\"following\").child(id).removeValue();\r\n                FirebaseDatabase.getInstance().getReference().child(\"Follow\").child(id)\r\n                        .child(\"followers\").child(firebaseUser.getUid()).removeValue();\r\n            }\r\n        });\r\n\r\n        exitApp.setOnClickListener(view1 -> {\r\n            FirebaseAuth.getInstance().signOut();\r\n            startActivity(new Intent(getContext(), Login.class));\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n    private void getNotifications() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference(\"Notifications\").child(id);\r\n\r\n        HashMap<String, Object> hashMap = new HashMap<>();\r\n        hashMap.put(\"userid\", firebaseUser.getUid());\r\n        hashMap.put(\"text\", getString(R.string.startedfollowing));\r\n        hashMap.put(\"postid\", \"\");\r\n        hashMap.put(\"ispost\", false);\r\n\r\n        reference.push().setValue(hashMap);\r\n    }\r\n\r\n    private void userInfo() {\r\n        final Query query = FirebaseDatabase.getInstance().getReference(\"users\");\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if(getActivity() == null)\r\n                    return;\r\n\r\n                for (DataSnapshot data : dataSnapshot.getChildren()) {\r\n                    User b = data.getValue(User.class);\r\n                    if (b.getId().equals(id)) {\r\n                        String fullNameUpdate = b.getFullName();\r\n                        String userNameUpdate = b.getUsername();\r\n                        String bioUpdate = b.getBio();\r\n                        String uriUpdate = b.getImageUrl();\r\n\r\n                        fullname.setText(fullNameUpdate);\r\n                        username.setText(userNameUpdate);\r\n                        bio.setText(bioUpdate);\r\n                        Glide.with(getActivity()).load(uriUpdate).into(profilePicture);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {}\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A function that checks if a user is being followed by current user\r\n     */\r\n    private void checkFollow() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference()\r\n                .child(\"Follow\").child(firebaseUser.getUid()).child(\"following\");\r\n        reference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.child(id).exists()) {\r\n                    edit_profile.setText(R.string.following);\r\n                } else {\r\n                    edit_profile.setText(R.string.follow_btn);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A function that gets specific user's Followers and Following count from DB\r\n     */\r\n    private void getFollowers() {\r\n        DatabaseReference followersRef = FirebaseDatabase.getInstance().getReference()\r\n                .child(\"Follow\").child(id).child(\"followers\");\r\n        followersRef.addValueEventListener(new ValueEventListener() {\r\n            @SuppressLint(\"SetTextI18n\")\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                followers.setText(\"\" + snapshot.getChildrenCount());\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n            }\r\n        });\r\n\r\n        DatabaseReference followingRef = FirebaseDatabase.getInstance().getReference()\r\n                .child(\"Follow\").child(id).child(\"following\");\r\n        followingRef.addValueEventListener(new ValueEventListener() {\r\n            @SuppressLint(\"SetTextI18n\")\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                following.setText(\"\" + snapshot.getChildrenCount());\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A function that gets specific user's number of posts from DB\r\n     */\r\n    private void getNumberOfPosts() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference(\"Posts\");\r\n        reference.addValueEventListener(new ValueEventListener() {\r\n            @SuppressLint(\"SetTextI18n\")\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                int i = 0;\r\n                for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                    Post post = snapshot1.getValue(Post.class);\r\n                    if (post.getPublisher().equals(id)) {\r\n                        i++;\r\n                    }\r\n                }\r\n                posts.setText(\"\" + i);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A function that gets specific user's photos from DB\r\n     */\r\n    private void getPhotos() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference(\"Posts\");\r\n        reference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                postList.clear();\r\n                for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                    Post post = snapshot1.getValue(Post.class);\r\n                    if (post.getPublisher().equals(id)) {\r\n                        postList.add(post);\r\n                    }\r\n                }\r\n                Collections.reverse(postList);\r\n                photoAdapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/Fragment/ProfileFragment.java b/app/src/main/java/com/example/studenthub/Fragment/ProfileFragment.java
--- a/app/src/main/java/com/example/studenthub/Fragment/ProfileFragment.java	(revision b272826f11666d78f13ded35bd7fe7fe3e4859b4)
+++ b/app/src/main/java/com/example/studenthub/Fragment/ProfileFragment.java	(date 1645190988647)
@@ -26,6 +26,7 @@
 import com.example.studenthub.Model.Post;
 import com.example.studenthub.Model.User;
 import com.example.studenthub.R;
+import com.example.studenthub.firebase.FollowingManager;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
 import com.google.firebase.database.ChildEventListener;
@@ -101,18 +102,11 @@
             if (buttonString.equals(getString(R.string.edit_profile)))
                 startActivity(new Intent(getContext(), EditProfile.class));
             else if (buttonString.equals(getString(R.string.follow_btn))) {
-                FirebaseDatabase.getInstance().getReference().child("Follow").child(firebaseUser.getUid())
-                        .child("following").child(id).setValue(true);
-                FirebaseDatabase.getInstance().getReference().child("Follow").child(id)
-                        .child("followers").child(firebaseUser.getUid()).setValue(true);
-
+                FollowingManager.follow(firebaseUser.getUid(),id);
                 getNotifications(); // If a new follow is created, update notifications
 
             } else if (buttonString.equals(getString(R.string.following))) {
-                FirebaseDatabase.getInstance().getReference().child("Follow").child(firebaseUser.getUid())
-                        .child("following").child(id).removeValue();
-                FirebaseDatabase.getInstance().getReference().child("Follow").child(id)
-                        .child("followers").child(firebaseUser.getUid()).removeValue();
+                FollowingManager.unFollow(firebaseUser.getUid(),id);
             }
         });
 
Index: app/src/main/java/com/example/studenthub/firebase/FollowingManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/firebase/FollowingManager.java b/app/src/main/java/com/example/studenthub/firebase/FollowingManager.java
new file mode 100644
--- /dev/null	(date 1645192037157)
+++ b/app/src/main/java/com/example/studenthub/firebase/FollowingManager.java	(date 1645192037157)
@@ -0,0 +1,80 @@
+package com.example.studenthub.firebase;
+
+import androidx.annotation.NonNull;
+
+import com.example.studenthub.Model.User;
+import com.example.studenthub.firebase.interfaces.FirebaseCallBack;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+
+public class FollowingManager {
+
+    public static DatabaseReference followingRef = FirebaseDatabase.getInstance().getReference().child("Follow");
+    public static DatabaseReference usersRef = FirebaseDatabase.getInstance().getReference().child("users");
+
+        public static void follow(String uid1,String uid2) {
+            followingRef.child(uid1)
+                    .child("following").child(uid2).setValue(true);
+            followingRef.child(uid2)
+                    .child("followers").child(uid1).setValue(true);
+        }
+
+    public static void unFollow(String uid1,String uid2) {
+        followingRef.child(uid1)
+                .child("following").child(uid2).removeValue();
+        followingRef.child(uid2)
+                .child("followers").child(uid1).removeValue();
+    }
+
+    public static void getFollowing(FirebaseCallBack<List<User>> callback) {
+        String uid = FirebaseAuth.getInstance().getUid();
+        if (uid == null) return;
+        followingRef.child(uid)
+                .child("followers")
+                .get()
+                .addOnSuccessListener(new OnSuccessListener<DataSnapshot>() {
+                    @Override
+                    public void onSuccess(DataSnapshot dataSnapshot) {
+                        HashMap<String, Boolean> hash = new HashMap<>();
+                        for (DataSnapshot childSnapShot : dataSnapshot.getChildren()) {
+                            hash.put(childSnapShot.getKey(), true);
+                        }
+                        usersRef.get()
+                                .addOnSuccessListener(new OnSuccessListener<DataSnapshot>() {
+                                    @Override
+                                    public void onSuccess(DataSnapshot usersDataSnapshot) {
+                                        List<User> following = new ArrayList<>();
+                                        for (DataSnapshot userChildSnap : usersDataSnapshot.getChildren()) {
+                                            if (hash.containsKey(userChildSnap.getKey()) &&
+                                                    hash.get(userChildSnap.getKey())) {
+                                                User u = userChildSnap.getValue(User.class);
+                                                following.add(u);
+                                            }
+                                        }
+                                        callback.onComplete(following);
+                                    }
+                                }).addOnFailureListener(new OnFailureListener() {
+                            @Override
+                            public void onFailure(@NonNull Exception e) {
+                                callback.onFailure(e);
+                            }
+                        });
+
+                    }
+                })
+                .addOnFailureListener(new OnFailureListener() {
+                    @Override
+                    public void onFailure(@NonNull Exception e) {
+                        callback.onFailure(e);
+                    }
+                });
+    }
+}
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.studenthub\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\r\n        android:maxSdkVersion=\"28\"/>\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:label=\"@string/app_name\"\r\n        android:icon=\"@drawable/ic_university_icon\"\r\n        android:roundIcon=\"@drawable/ic_university_icon\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".WelcomeAnimation\" android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".CommentsActivity\"\r\n            android:launchMode=\"singleTop\"/>\r\n        <activity android:name=\".PostActivity\"\r\n            android:launchMode=\"singleTop\"/>\r\n        <activity android:name=\".EditProfile\"\r\n            android:launchMode=\"singleTop\"/>\r\n        <activity android:name=\"com.theartofdev.edmodo.cropper.CropImageActivity\"\r\n            android:theme=\"@style/Base.Theme.AppCompat\" />\r\n        <activity android:name=\".Login\"\r\n            android:exported=\"true\"\r\n            android:launchMode=\"singleTop\"\r\n            android:windowSoftInputMode=\"adjustPan\">\r\n        </activity>\r\n        <activity android:name=\".MainActivity\"\r\n            android:launchMode=\"singleTop\"/>\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n\r\n        <provider\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:authorities=\"com.example.studenthub.provider\"\r\n            android:exported=\"false\"\r\n            android:grantUriPermissions=\"true\">\r\n            <meta-data\r\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n                android:resource=\"@xml/file_paths\">\r\n            </meta-data>\r\n        </provider>\r\n\r\n    </application>\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision b272826f11666d78f13ded35bd7fe7fe3e4859b4)
+++ b/app/src/main/AndroidManifest.xml	(date 1645190988630)
@@ -10,6 +10,7 @@
     <application
         android:allowBackup="true"
         android:label="@string/app_name"
+        android:name=".StudentHubApp"
         android:icon="@drawable/ic_university_icon"
         android:roundIcon="@drawable/ic_university_icon"
         android:supportsRtl="true"
@@ -26,6 +27,12 @@
             android:launchMode="singleTop"/>
         <activity android:name=".EditProfile"
             android:launchMode="singleTop"/>
+        <activity android:name=".chats.UsersActivity"
+            android:launchMode="singleTop"/>
+        <activity android:name=".chats.ChatActivity"
+            android:launchMode="singleTop"/>
+        <activity android:name=".chats.ChatRoomsActivity"
+            android:launchMode="singleTop"/>
         <activity android:name="com.theartofdev.edmodo.cropper.CropImageActivity"
             android:theme="@style/Base.Theme.AppCompat" />
         <activity android:name=".Login"
@@ -51,5 +58,13 @@
             </meta-data>
         </provider>
 
+
+        <service
+            android:name=".firebase.MessagingService"
+            android:exported="false">
+            <intent-filter>
+                <action android:name="com.google.firebase.MESSAGING_EVENT" />
+            </intent-filter>
+        </service>
     </application>
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/example/studenthub/Adapter/interfaces/OnEnterChatRoomListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/Adapter/interfaces/OnEnterChatRoomListener.java b/app/src/main/java/com/example/studenthub/Adapter/interfaces/OnEnterChatRoomListener.java
new file mode 100644
--- /dev/null	(date 1645194227190)
+++ b/app/src/main/java/com/example/studenthub/Adapter/interfaces/OnEnterChatRoomListener.java	(date 1645194227190)
@@ -0,0 +1,8 @@
+package com.example.studenthub.Adapter.interfaces;
+
+import com.example.studenthub.Model.ChatRoom;
+
+public interface OnEnterChatRoomListener {
+
+    void enterChatRoom(String roomId);
+}
Index: app/src/main/java/com/example/studenthub/chats/LoadingActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/chats/LoadingActivity.java b/app/src/main/java/com/example/studenthub/chats/LoadingActivity.java
new file mode 100644
--- /dev/null	(date 1645201236582)
+++ b/app/src/main/java/com/example/studenthub/chats/LoadingActivity.java	(date 1645201236582)
@@ -0,0 +1,25 @@
+package com.example.studenthub.chats;
+
+import android.app.ProgressDialog;
+import android.widget.Toast;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+public class LoadingActivity extends AppCompatActivity {
+
+
+    public ProgressDialog showLoading(String content) {
+        ProgressDialog progressDialog = new ProgressDialog(this);
+        progressDialog.setCancelable(false);
+        progressDialog.setTitle("StudentsHub");
+        progressDialog.setMessage("Loading " + content + " ..");
+        progressDialog.show();
+        return progressDialog;
+    }
+
+
+    public void showToast(String message) {
+        Toast.makeText(getApplicationContext(),message,Toast.LENGTH_SHORT).show();
+
+    }
+}
Index: app/src/main/java/com/example/studenthub/Model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.studenthub.Model;\r\n\r\nimport com.google.firebase.database.IgnoreExtraProperties;\r\n\r\nimport java.util.Map;\r\n\r\n@IgnoreExtraProperties\r\npublic class User {\r\n    private String username;\r\n    private String email;\r\n    private String fullName;\r\n    private String imageUrl;\r\n    private String bio;\r\n    private String id;\r\n\r\n    public User(String username, String email, String fullName, String imageUrl, String bio, String id) {\r\n        this.username = username;\r\n        this.email = email;\r\n        this.fullName = fullName;\r\n        this.imageUrl = imageUrl;\r\n        this.bio = bio;\r\n        this.id = id;\r\n    }\r\n\r\n    public User() {\r\n        // Default empty constructor\r\n    }\r\n\r\n    public User(Map<String, Object> data) {\r\n        this.username = (String) data.get(\"username\");\r\n        this.imageUrl = (String) data.get(\"imageUrl\");\r\n        this.bio = (String) data.get(\"bio\");\r\n        this.fullName = (String) data.get(\"fullName\");\r\n        this.email = (String) data.get(\"email\");\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public String getFullName() {\r\n        return fullName;\r\n    }\r\n\r\n    public void setFullName(String fullName) {\r\n        this.fullName = fullName;\r\n    }\r\n\r\n    public String getImageUrl() {\r\n        return imageUrl;\r\n    }\r\n\r\n    public void setImageUrl(String imageUrl) {\r\n        this.imageUrl = imageUrl;\r\n    }\r\n\r\n    public String getBio() {\r\n        return bio;\r\n    }\r\n\r\n    public void setBio(String bio) {\r\n        this.bio = bio;\r\n    }\r\n\r\n    public String getId() {\r\n        return id;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public void setId(String id) {\r\n        this.id = id;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/Model/User.java b/app/src/main/java/com/example/studenthub/Model/User.java
--- a/app/src/main/java/com/example/studenthub/Model/User.java	(revision b272826f11666d78f13ded35bd7fe7fe3e4859b4)
+++ b/app/src/main/java/com/example/studenthub/Model/User.java	(date 1645186748459)
@@ -2,6 +2,7 @@
 
 import com.google.firebase.database.IgnoreExtraProperties;
 
+import java.util.List;
 import java.util.Map;
 
 @IgnoreExtraProperties
@@ -32,6 +33,7 @@
         this.bio = (String) data.get("bio");
         this.fullName = (String) data.get("fullName");
         this.email = (String) data.get("email");
+        this.id = (String) data.get("id");
     }
 
     public String getEmail() {
Index: app/src/main/java/com/example/studenthub/Fragment/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.studenthub.Fragment;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport com.example.studenthub.Model.User;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.example.studenthub.Adapter.PostAdapter;\r\nimport com.example.studenthub.Model.Post;\r\nimport com.example.studenthub.R;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\npublic class HomeFragment extends Fragment {\r\n\r\n    private RecyclerView recyclerView;\r\n    private PostAdapter postAdapter;\r\n    private List<Post> postList;\r\n    private List<String> followingList;\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_home, container, false);\r\n\r\n        recyclerView = view.findViewById(R.id.recycler_view);\r\n        recyclerView.setHasFixedSize(true);\r\n        LinearLayoutManager mLayoutManager = new LinearLayoutManager(getContext());\r\n        mLayoutManager.setReverseLayout(true);\r\n        mLayoutManager.setStackFromEnd(true);\r\n        recyclerView.setLayoutManager(mLayoutManager);\r\n        postList = new ArrayList<>();\r\n        postAdapter = new PostAdapter(getContext(), postList);\r\n        recyclerView.setAdapter(postAdapter);\r\n\r\n        checkFollowingAndGetPosts();\r\n\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n    }\r\n\r\n    /**\r\n     * A function that gets all of the users that a specific user follows, and gets their posts\r\n     */\r\n    private void checkFollowingAndGetPosts(){\r\n        followingList = new ArrayList<>();\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference(\"Follow\")\r\n                .child(Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid())\r\n                .child(\"following\");\r\n\r\n        reference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                followingList.clear();\r\n                for (DataSnapshot snapshot : dataSnapshot.getChildren()){\r\n                    followingList.add(snapshot.getKey());\r\n                }\r\n                getPostsOfFollowedUsers();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {}\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A function that gets all of the posts of the people that a specific user follows.\r\n     */\r\n    private void getPostsOfFollowedUsers(){\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference(\"Posts\");\r\n        reference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                postList.clear();\r\n                for (DataSnapshot snapshot : dataSnapshot.getChildren()){\r\n                    Post post = snapshot.getValue(Post.class);\r\n                    for (String id : followingList){\r\n                        if (Objects.requireNonNull(post).getPublisher().equals(id)){\r\n                            postList.add(post);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Refresh the data set\r\n                postAdapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {}\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/Fragment/HomeFragment.java b/app/src/main/java/com/example/studenthub/Fragment/HomeFragment.java
--- a/app/src/main/java/com/example/studenthub/Fragment/HomeFragment.java	(revision b272826f11666d78f13ded35bd7fe7fe3e4859b4)
+++ b/app/src/main/java/com/example/studenthub/Fragment/HomeFragment.java	(date 1645194539101)
@@ -1,5 +1,6 @@
 package com.example.studenthub.Fragment;
 
+import android.content.Intent;
 import android.os.Bundle;
 
 import androidx.annotation.NonNull;
@@ -8,6 +9,7 @@
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import com.example.studenthub.Model.User;
+import com.example.studenthub.chats.ChatRoomsActivity;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.firestore.FirebaseFirestoreException;
 
@@ -57,6 +59,13 @@
     @Override
     public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
+        view.findViewById(R.id.chat_button).setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Intent i = new Intent(getContext(), ChatRoomsActivity.class);
+                startActivity(i);
+            }
+        });
     }
 
     /**
Index: app/src/main/res/layout/chat_room.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/chat_room.xml b/app/src/main/res/layout/chat_room.xml
new file mode 100644
--- /dev/null	(date 1645186748353)
+++ b/app/src/main/res/layout/chat_room.xml	(date 1645186748353)
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:background="@color/white"
+    app:cardCornerRadius="4dp"
+    android:padding="4dp"
+    android:layout_margin="8dp"
+    android:layout_height="wrap_content">
+<androidx.constraintlayout.widget.ConstraintLayout
+    android:background="@color/white"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+
+    <LinearLayout
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:gravity="center|start"
+        android:padding="8dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent">
+
+        <androidx.cardview.widget.CardView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/colorGreen"
+            app:cardCornerRadius="16dp">
+
+            <ImageView
+                android:id="@+id/user_image_chat_room"
+                android:layout_width="32dp"
+                android:layout_height="32dp"
+                android:background="@android:color/transparent"
+                android:src="@drawable/ic_person" />
+        </androidx.cardview.widget.CardView>
+
+        <TextView
+            android:id="@+id/user_name_chat_room"
+            android:layout_width="wrap_content"
+            android:textSize="18sp"
+            android:layout_height="wrap_content"
+            android:padding="8dp"
+            android:text="Chat With: username"
+            android:textColor="#737373" />
+    </LinearLayout>
+</androidx.constraintlayout.widget.ConstraintLayout>
+</androidx.cardview.widget.CardView>
\ No newline at end of file
Index: app/src/main/res/drawable/background_pic_message.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/background_pic_message.xml b/app/src/main/res/drawable/background_pic_message.xml
new file mode 100644
--- /dev/null	(date 1645186748344)
+++ b/app/src/main/res/drawable/background_pic_message.xml	(date 1645186748344)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <solid android:color="@color/browser_actions_bg_grey"/>
+    <corners android:radius="8dp"/>
+
+</shape>
\ No newline at end of file
Index: app/src/main/res/layout/personalist.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/personalist.xml b/app/src/main/res/layout/personalist.xml
new file mode 100644
--- /dev/null	(date 1645186748366)
+++ b/app/src/main/res/layout/personalist.xml	(date 1645186748366)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/studenthub/StudentHubApp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/StudentHubApp.java b/app/src/main/java/com/example/studenthub/StudentHubApp.java
new file mode 100644
--- /dev/null	(date 1645201236578)
+++ b/app/src/main/java/com/example/studenthub/StudentHubApp.java	(date 1645201236578)
@@ -0,0 +1,38 @@
+package com.example.studenthub;
+
+import android.app.Application;
+import android.content.Intent;
+import android.util.Log;
+
+import androidx.annotation.NonNull;
+
+import com.example.studenthub.firebase.MessagingManager;
+import com.example.studenthub.firebase.MessagingService;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.firebase.messaging.FirebaseMessaging;
+
+public class StudentHubApp extends Application {
+
+    public static String token = "";
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        startService(new Intent(this, MessagingService.class));
+        Log.d("StudentHubApp","Starting messaging service");
+        FirebaseMessaging.getInstance().getToken().addOnSuccessListener(new OnSuccessListener<String>() {
+            @Override
+            public void onSuccess(String s) {
+                token = s;
+                System.out.println(token);
+            }
+        }).addOnFailureListener(new OnFailureListener() {
+            @Override
+            public void onFailure(@NonNull Exception e) {
+                System.out.println("There was a problem receiving token");
+            }
+        });
+
+
+    }
+}
Index: app/src/main/java/com/example/studenthub/Adapter/ChatRoomsRvAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/Adapter/ChatRoomsRvAdapter.java b/app/src/main/java/com/example/studenthub/Adapter/ChatRoomsRvAdapter.java
new file mode 100644
--- /dev/null	(date 1645200588305)
+++ b/app/src/main/java/com/example/studenthub/Adapter/ChatRoomsRvAdapter.java	(date 1645200588305)
@@ -0,0 +1,77 @@
+package com.example.studenthub.Adapter;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.studenthub.Adapter.interfaces.OnEnterChatRoomListener;
+import com.example.studenthub.Model.ChatRoom;
+import com.example.studenthub.R;
+import com.example.studenthub.firebase.MessagingManager;
+import com.google.firebase.auth.FirebaseAuth;
+import com.example.studenthub.Model.User;
+import com.squareup.picasso.Picasso;
+
+
+import java.util.List;
+
+public class ChatRoomsRvAdapter extends RecyclerView.Adapter<ChatRoomsRvAdapter.ChatRoomsViewHolder> {
+
+    private List<ChatRoom> chatRooms;
+    private OnEnterChatRoomListener onEnterChatRoomListener;
+    public ChatRoomsRvAdapter(List<ChatRoom> chatRooms, OnEnterChatRoomListener onEnterChatRoomListener) {
+        this.chatRooms = chatRooms;
+        this.onEnterChatRoomListener = onEnterChatRoomListener;
+    }
+
+    @NonNull
+    @Override
+    public ChatRoomsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        View v =  LayoutInflater.from(parent.getContext()).inflate(R.layout.chat_room,parent,false);
+        return new ChatRoomsViewHolder(v);
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull ChatRoomsViewHolder holder, int position) {
+        ChatRoom room = chatRooms.get(position);
+        holder.bind(room);
+    }
+
+    @Override
+    public int getItemCount() {
+        return chatRooms.size();
+    }
+
+     class ChatRoomsViewHolder extends RecyclerView.ViewHolder {
+        private ImageView uImageView;
+        private TextView uNameTV;
+        public ChatRoomsViewHolder(@NonNull View itemView) {
+            super(itemView);
+            this.uImageView = itemView.findViewById(R.id.user_image_chat_room);
+            this.uNameTV = itemView.findViewById(R.id.user_name_chat_room);
+        }
+
+        public void bind(ChatRoom room) {
+            // @TODO : set Image
+            User u = null;
+            String uid = FirebaseAuth.getInstance().getUid();
+            if(room.getOwnerId().equals(uid))
+                u = MessagingManager.getUserById(room.getSecondUserId());
+            else u = MessagingManager.getUserById(room.getOwnerId());
+
+            uNameTV.setText("Chat With: " +  u.getFullName());
+            Picasso.get().load(u.getImageUrl()).into(uImageView);
+            itemView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View view) {
+                    onEnterChatRoomListener.enterChatRoom(room.getId());
+                }
+            });
+        }
+    }
+}
Index: app/src/main/java/com/example/studenthub/Model/ChatRoom.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/Model/ChatRoom.java b/app/src/main/java/com/example/studenthub/Model/ChatRoom.java
new file mode 100644
--- /dev/null	(date 1645200588295)
+++ b/app/src/main/java/com/example/studenthub/Model/ChatRoom.java	(date 1645200588295)
@@ -0,0 +1,77 @@
+package com.example.studenthub.Model;
+
+import java.sql.Array;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.List;
+
+public class ChatRoom {
+
+    public static String DUMMY = "DUMMY";
+    private String id;
+    private String ownerId;
+    private String secondUserId;
+
+
+
+    private HashMap<String,ChatMessage> chatMessages;
+
+
+    public ChatRoom(String id,String ownerId,String secondUserId,HashMap<String,ChatMessage> chatMessages) {
+        this.ownerId = ownerId;
+        this.secondUserId = secondUserId;
+        this.chatMessages = chatMessages;
+        this.id = id;
+    }
+
+    public ChatRoom() {}
+    public ChatRoom(String id,String ownerId,String secondUserId) {
+        this.ownerId = ownerId;
+        this.secondUserId = secondUserId;
+        this.chatMessages = new HashMap<>();
+        chatMessages.put(DUMMY,new ChatMessage(DUMMY,ownerId,secondUserId,DUMMY));
+        this.id = id;
+    }
+
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public String getOwnerId() {
+        return ownerId;
+    }
+
+    public void setOwnerId(String ownerId) {
+        this.ownerId = ownerId;
+    }
+
+    public String getSecondUserId() {
+        return secondUserId;
+    }
+
+    public void setSecondUserId(String secondUserId) {
+        this.secondUserId = secondUserId;
+    }
+
+    public HashMap<String,ChatMessage> getChatMessages() {
+        return chatMessages;
+    }
+
+    public void setChatMessages(HashMap<String,ChatMessage> chatMessages) {
+        this.chatMessages = chatMessages;
+    }
+
+    @Override
+    public String toString() {
+        return "ChatRoom{" +
+                "ownerId='" + ownerId + '\'' +
+                ", secondUserId='" + secondUserId + '\'' +
+                ", chatMessages=" + chatMessages +
+                '}';
+    }
+}
Index: app/src/main/java/com/example/studenthub/Model/ChatMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/Model/ChatMessage.java b/app/src/main/java/com/example/studenthub/Model/ChatMessage.java
new file mode 100644
--- /dev/null	(date 1645198079091)
+++ b/app/src/main/java/com/example/studenthub/Model/ChatMessage.java	(date 1645198079091)
@@ -0,0 +1,83 @@
+package com.example.studenthub.Model;
+
+import android.view.ContextMenu;
+
+import java.util.concurrent.CompletionException;
+
+public class ChatMessage  implements Comparable<ChatMessage> {
+    private String id;
+    private String authorId;
+    private String recipientId;
+    private String message;
+    private long date;
+
+    public ChatMessage(String id, String authorId, String recipientId, String message) {
+        this.authorId = authorId;
+        this.recipientId = recipientId;
+        this.message = message;
+        this.date = System.currentTimeMillis();
+        this.id = id;
+    }
+
+    public ChatMessage() {}
+
+
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public long getDate() {
+        return date;
+    }
+
+    public void setAuthorId(String authorId) {
+        this.authorId = authorId;
+    }
+
+    public String getRecipientId() {
+        return recipientId;
+    }
+
+    public void setRecipientId(String recipientId) {
+        this.recipientId = recipientId;
+    }
+
+    public String getMessage() {
+        return message;
+    }
+
+    public void setMessage(String message) {
+        this.message = message;
+    }
+
+    public void setDate(long date) {
+        this.date = date;
+    }
+
+    public String getAuthorId() {
+        return authorId;
+    }
+
+    @Override
+    public String toString() {
+        return "ChatMessage{" +
+                "authorId='" + authorId + '\'' +
+                ", recipientId='" + recipientId + '\'' +
+                ", message='" + message + '\'' +
+                ", date=" + date +
+                '}';
+    }
+
+    @Override
+    public int compareTo(ChatMessage chatMessage) {
+        if(chatMessage.date > date)
+            return -1;
+        else if(chatMessage.date < date)
+            return 1;
+        return 0;
+    }
+}
Index: app/src/main/res/layout/activity_chat_rooms.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_chat_rooms.xml b/app/src/main/res/layout/activity_chat_rooms.xml
new file mode 100644
--- /dev/null	(date 1645190988567)
+++ b/app/src/main/res/layout/activity_chat_rooms.xml	(date 1645190988567)
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:animateLayoutChanges="true"
+    android:background="@color/white"
+    tools:context=".chats.ChatRoomsActivity">
+<TextView
+    android:id="@+id/chat_rooms_title_tv"
+    app:layout_constraintStart_toStartOf="parent"
+    app:layout_constraintEnd_toEndOf="parent"
+    app:layout_constraintTop_toTopOf="parent"
+    android:layout_margin="32dp"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:textColor="@color/colorGreen"
+    android:textStyle="bold"
+    android:textSize="32dp"
+    android:text="Chat Rooms"/>
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/chat_rooms_rv"
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        tools:listitem="@layout/chat_room"
+        app:layout_constraintTop_toBottomOf="@id/chat_rooms_title_tv"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"/>
+
+
+    <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:id="@+id/newChatRoom_btn"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:src="@drawable/ic_add"
+        android:layout_margin="32dp"/>
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/studenthub/firebase/MessagingService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/studenthub/firebase/MessagingService.java b/app/src/main/java/com/example/studenthub/firebase/MessagingService.java
new file mode 100644
--- /dev/null	(date 1645186748413)
+++ b/app/src/main/java/com/example/studenthub/firebase/MessagingService.java	(date 1645186748413)
@@ -0,0 +1,73 @@
+package com.example.studenthub.firebase;
+
+import android.app.Notification;
+import android.app.NotificationChannel;
+import android.app.NotificationManager;
+import android.app.PendingIntent;
+import android.content.Context;
+import android.content.Intent;
+import android.media.RingtoneManager;
+import android.net.Uri;
+import android.os.Build;
+import android.util.Log;
+
+import androidx.annotation.NonNull;
+import androidx.core.app.NotificationCompat;
+import androidx.core.app.NotificationManagerCompat;
+
+import com.example.studenthub.MainActivity;
+import com.example.studenthub.PreferencesUtils;
+import com.example.studenthub.R;
+import com.google.firebase.messaging.FirebaseMessagingService;
+import com.google.firebase.messaging.RemoteMessage;
+
+public class MessagingService extends FirebaseMessagingService {
+    private NotificationManagerCompat notificationManager = null;
+   // private PreferencesUtils pUtils = new PreferencesUtils(this);
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        notificationManager = NotificationManagerCompat.from(this);
+    }
+
+    @Override
+    public void onNewToken(@NonNull String token) {
+        super.onNewToken(token);
+    }
+
+
+
+    @Override
+    public void onMessageReceived(@NonNull RemoteMessage remoteMessage) {
+        super.onMessageReceived(remoteMessage);
+        sendNotification(remoteMessage);
+    }
+    private void sendNotification(RemoteMessage remoteMessage) {
+        Intent intent = new Intent(this, MainActivity.class);
+        PendingIntent pendingIntent = PendingIntent.getActivity(this,
+                0,intent,PendingIntent.FLAG_ONE_SHOT);
+        String channelId =   "Channel 1";
+        Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);
+        NotificationCompat.Builder notificationBuilder;
+        notificationBuilder =
+                new NotificationCompat.Builder(this, channelId)
+                        .setSmallIcon(R.drawable.ic_baseline_notifications_active_24)
+                        .setContentTitle(remoteMessage.getNotification().getTitle())
+                        .setContentText(remoteMessage.getNotification().getBody())
+                        .setAutoCancel(true)
+                        .setSound(defaultSoundUri)
+                        .setContentIntent(pendingIntent);
+        NotificationManager notificationManager =
+                (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
+
+// Since android Oreo notification channel is needed.
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+            NotificationChannel channel = new NotificationChannel(channelId,
+                    "Channel human readable title",
+                    NotificationManager.IMPORTANCE_DEFAULT);
+            notificationManager.createNotificationChannel(channel);
+        }
+        notificationManager.notify(0, notificationBuilder.build());
+    }
+}
